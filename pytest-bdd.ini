[tool:pytest]
# pytest-bdd configuration for fx_bin project
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=5
    --color=yes
    --bdd-features-base-dir features/
    --bdd-strict-gherkin

testpaths = tests/bdd

# Markers for test categorization
markers =
    smoke: Critical path scenarios that must pass
    critical: High-priority scenarios for core functionality
    regression: Full regression test scenarios
    sorting: Tests for sorting functionality
    recursion: Tests for recursive vs non-recursive behavior
    output-format: Tests for different output formats
    pagination: Tests for result limiting and pagination
    edge-cases: Tests for edge cases and boundary conditions
    security: Security-related tests (path traversal, permissions)
    error-handling: Tests for error conditions and validation
    performance: Performance and scalability tests
    integration: Integration tests with other fx commands
    case-sensitivity: Tests for case-insensitive behavior
    multiple-directories: Tests for multi-directory operations
    glob-patterns: Tests for pattern matching functionality
    help-and-usage: Tests for help and documentation
    version-compatibility: Tests for version display
    slow: Tests that take longer to execute
    fast: Quick tests for rapid feedback

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Minimum version requirements
minversion = 6.0

# Test discovery patterns
python_files = test_*.py *_test.py *_steps.py
python_classes = Test* *Tests
python_functions = test_* *_test step_*

# Coverage configuration for BDD tests
# (when using pytest-cov)
# addopts = --cov=fx_bin --cov-report=html --cov-report=term-missing
[tool.poetry]
name = "fx-bin"
version = "0.9.2"
description = "A common bin collection for my own usage"
authors = ["Frank Xu <frank@frankxu.me>"]
readme = "README.rst"
repository = "https://github.com/frankyxhl/fx_bin"
keywords = ["fx_bin"]
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.3"
loguru = "^0.7.0"
pandas = {version = "^2.0.0", optional = true}
returns = "^0.22.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-timeout = "^2.2.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
flake8 = "^7.0.0"
black = "^24.0.0"
mypy = "^1.8.0"
bandit = "^1.7.5"
safety = "^3.0.0"
psutil = "^5.9.0"
pandas = "^2.3.2"
openpyxl = "^3.1.5"

[tool.poetry.scripts]
fx_upgrade = "fx_bin.run_upgrade_program:main"
fx_files = "fx_bin.files:main"
fx_size = "fx_bin.size:main"
fx_ff = "fx_bin.find_files:main"
fx_replace = "fx_bin.replace:main"
fx_grab_json_api_to_excel = "fx_bin.pd:main"

[tool.poetry.extras]
excel = ["pandas"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=fx_bin",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
    "--timeout=30",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "security: marks tests as security-related",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
]
timeout = 300

[tool.coverage.run]
source = ["fx_bin"]
omit = [
    "*/tests/*",
    "*/test_*",
    "fx_bin/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | build
    | dist
  )/
)
'''

[tool.mypy]
python_version = "3.11"
plugins = ["returns.contrib.mypy.returns_plugin"]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "psutil.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[tool.bandit.assert_used]
skips = ["**/test_*.py", "**/tests/*"]
